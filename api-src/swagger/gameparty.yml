paths:



  /api/users/{id}:
    get:
      tags:
        - user
      summary: 유저정보를 가져옵니다.
      parameters:
        - in: path
          required: true
          name: id
          example: 1
          schema:
            type: integer
      responses:
        '200':
          description: 성공
        '400':
          description: Bad Request
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ApiResponse'








  /api/users:
    post:
      tags:
        - user
      summary: 유저 회원가입
      requestBody:
        required: true
        description: 회원가입 요청을 위해 email, password를 보냅니다.
        content:
          application/json:
            schema:
              $ref:  "#/components/schemas/SignUp"
      responses:
        '201':
          description: Created 
        '400':
          description: Bad Request
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ApiResponse'
                







  /api/auth/login:
    post:
      tags:
        - auth
      summary: 유저 로그인
      requestBody:
        required: true
        description: 로그인 정보를 담아서 보냅니다.
        content:
          application/json:
            schema:
              $ref:  "#/components/schemas/SignUp"
      responses:
        '200':
          description: 요청성공
        '400':
          description: Bad Request
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ApiResponse'





  /api/profile/:
    post:
      security:
        - bearerAuth: []
      tags:
        - profile
      summary: 유저 프로필 등록
      requestBody:
        required: true
        description: 프로필 생성을위해 정보를 등록합니다
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Profile"
      responses:
          '200':
            description: 요청성공
          '400':
          description: Bad Request
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ApiResponse'





components:
  schemas:
    
    WrongEmailFormat:
      type: object
      properties:
        email:
          type: string 
          example: "shlifedev@gmail.com"
        password:
          type: string 
          example: "tjdgo123"


    Login:
      type: object
      properties:
        email:
          type: string 
          example: "shlifedev@gmail.com"
        password:
          type: string 
          example: "tjdgo123"


    SignUp:
      type: object
      properties:
        email:
          type: string 
          example: "shlifedev@gmail.com"
        password:
          type: string 
          example: "tjdgo123"

    ApiResponse:
      type: object
      properties:
        status:
          type: integer
          format: int32
          example: 0
        message:
          type: string
          example: "message"
        data:
          type: string
          example: "[]"


    Profile:
      type: object
      properties:
        nickname:
          type: string 
          example: "먀오이"
        age:
          type: integer 
          example: 23
        sex:
          type: integer 
          example: 0
        introduce:
          type: string 
          example: "안녕하세요. 저는 게임을 좋아하는 사람이에요!"
        discord_nick:
          type: string 
          example: "미야오#1234"
        discord_channel:
          type: string 
          example: "http://discord.com"



            